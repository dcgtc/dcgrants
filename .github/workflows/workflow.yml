# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run tests and lint

on: [push]

jobs:
  build:
    name: "PR build"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.17.4]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Testing repository (${{ matrix.node-version }})
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install dependencies
        run: yarn
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: If deps were cached, run postinstall hook
        run: yarn postinstall
        if: |
          steps.cache-yarn-cache.outputs.cache-hit == 'true' ||
          steps.cache-node-modules.outputs.cache-hit == 'true'
      - name: Run test
        run: yarn test
        env:
          INFURA_ID: ${{ secrets.INFURA_ID }}
      - name: Run lint
        run: yarn lint
